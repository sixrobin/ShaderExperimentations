// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
Texture2D<float4> ColorTex;
SamplerState sampler_ColorTex;

[numthreads(8, 8, 1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint width;
    uint height;
    Result.GetDimensions(width, height);

    // float2 uv = float2(id.xy / float2(width, height)); // Clamped texture.
    float2 uv = float2((id.xy + float2(0.5, 0.5)) / float2(width, height)); // Repeating texture.

    float4 col = ColorTex.SampleLevel(sampler_ColorTex, uv, 0);

    Result[id.xy] = col;
}
